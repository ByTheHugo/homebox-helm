# Default values for HomeBox.
# This is a YAML-formatted file.
# Declare variables to be passed into your templates.

global:
  # Global default StorageClass for Persistent Volume(s) (used for HomeBox and PostgreSQL)
  defaultStorageClass: ""

# This will set the replicaset count more information can be found here: https://kubernetes.io/docs/concepts/workloads/controllers/replicaset/
replicaCount: 1

# This sets the container image more information can be found here: https://kubernetes.io/docs/concepts/containers/images/
image:
  repository: sysadminsmedia/homebox
  # This sets the pull policy for images.
  pullPolicy: IfNotPresent
  # Overrides the image tag whose default is the chart appVersion.
  tag: ""

# Persistence configuration for HomeBox
persistence:
  storageClass: ""
  capacity: 5Gi
  accessModes:
    - ReadWriteOnce

# This define the HomeBox configuration
env:
  TZ: Europe/Paris
  HBOX_MODE: production
  HBOX_WEB_PORT: 7745

  HBOX_OPTIONS_ALLOW_REGISTRATION: true
  HBOX_OPTIONS_AUTO_INCREMENT_ASSET_ID: true
  HBOX_OPTIONS_ALLOW_ANALYTICS: false

  HBOX_WEB_MAX_FILE_UPLOAD: 10

  HBOX_STORAGE_DATA: /data

  HBOX_LOG_LEVEL: info
  HBOX_LOG_FORMAT: text

  HBOX_MAILER_HOST: ""
  HBOX_MAILER_PORT: 587
  HBOX_MAILER_USERNAME: ""
  HBOX_MAILER_PASSWORD: ""
  HBOX_MAILER_FROM: ""

  HBOX_DATABASE_DRIVER: sqlite3
  HBOX_DATABASE_SQLITE_PATH: ./.data/homebox.db?_pragma=busy_timeout=999&_pragma=journal_mode=WAL&_fk=1
  HBOX_DATABASE_SSL_MODE: disable

  HBOX_OPTIONS_CHECK_GITHUB_RELEASE: true

  HBOX_LABEL_MAKER_WIDTH: 526
  HBOX_LABEL_MAKER_HEIGHT: 200
  HBOX_LABEL_MAKER_PADDING: 32
  HBOX_LABEL_MAKER_FONT_SIZE: 32.0
  HBOX_LABEL_MAKER_PRINT_COMMAND: ""
  HBOX_LABEL_MAKER_DYNAMIC_LENGTH: true
  HBOX_LABEL_MAKER_ADDITIONAL_INFORMATION: ""

# This define the PostgreSQL server configuration that will be deployed using Helm subchart.
# Set the .enabled key to false to use an external PostgreSQL server.
# For more information checkout: https://artifacthub.io/packages/helm/bitnami/postgresql
postgresql:
  enabled: true
  auth:
    username: homebox-user
    password: homebox-password
    database: homebox-db
  primary:
    persistence:
      storageClass: ""
  readReplica:
    persistence:
      storageClass: ""

externalPostgresql:
  host: postgres
  port: 5432
  auth:
    username: external-homebox-user
    password: external-homebox-password
    database: external-homebox-db

# This is for the secrets for pulling an image from a private repository more information can be found here: https://kubernetes.io/docs/tasks/configure-pod-container/pull-image-private-registry/
imagePullSecrets: []
# This is to override the chart name.
nameOverride: ""
fullnameOverride: ""

# This section builds out the service account more information can be found here: https://kubernetes.io/docs/concepts/security/service-accounts/
serviceAccount:
  # Specifies whether a service account should be created
  create: true
  # Automatically mount a ServiceAccount's API credentials?
  automount: true
  # Annotations to add to the service account
  annotations: {}
  # The name of the service account to use.
  # If not set and create is true, a name is generated using the fullname template
  name: ""

# This is for setting Kubernetes Annotations to a Pod.
# For more information checkout: https://kubernetes.io/docs/concepts/overview/working-with-objects/annotations/
podAnnotations: {}
# This is for setting Kubernetes Labels to a Pod.
# For more information checkout: https://kubernetes.io/docs/concepts/overview/working-with-objects/labels/
podLabels: {}

podSecurityContext:
  fsGroup: 65532
  seccompProfile:
    type: RuntimeDefault

securityContext:
  capabilities:
    drop:
    - ALL
  allowPrivilegeEscalation: false
  readOnlyRootFilesystem: false
  runAsNonRoot: true
  runAsUser: 65532
  runAsGroup: 65532

# This is for setting up a service more information can be found here: https://kubernetes.io/docs/concepts/services-networking/service/
service:
  # This sets the service type more information can be found here: https://kubernetes.io/docs/concepts/services-networking/service/#publishing-services-service-types
  type: ClusterIP
  # This sets the ports more information can be found here: https://kubernetes.io/docs/concepts/services-networking/service/#field-spec-ports
  port: 7745

# This block is for setting up the ingress for more information can be found here: https://kubernetes.io/docs/concepts/services-networking/ingress/
ingress:
  enabled: false
  className: ""
  annotations: {}
    # kubernetes.io/ingress.class: nginx
    # kubernetes.io/tls-acme: "true"
  hosts:
    - host: homebox.local
      paths:
        - path: /
          pathType: ImplementationSpecific
  tls: []
  #  - secretName: chart-example-tls
  #    hosts:
  #      - chart-example.local

resources:
  # We usually recommend not to specify default resources and to leave this as a conscious
  # choice for the user. This also increases chances charts run on environments with little
  # resources, such as Minikube. If you do want to specify resources, uncomment the following
  # lines, adjust them as necessary, and remove the curly braces after 'resources:'.
  limits:
    cpu: 300m
    memory: 512Mi
  requests:
    cpu: 100m
    memory: 256Mi

# This is to setup the liveness and readiness probes more information can be found here: https://kubernetes.io/docs/tasks/configure-pod-container/configure-liveness-readiness-startup-probes/
livenessProbe:
  httpGet:
    path: /
    port: http
  initialDelaySeconds: 5
  periodSeconds: 5
readinessProbe:
  httpGet:
    path: /
    port: http
  initialDelaySeconds: 5
  periodSeconds: 5
startupProbe:
  httpGet:
    path: /
    port: http
  failureThreshold: 30
  periodSeconds: 10

# This section is for setting up autoscaling more information can be found here: https://kubernetes.io/docs/concepts/workloads/autoscaling/
autoscaling:
  enabled: false
  minReplicas: 1
  maxReplicas: 100
  targetCPUUtilizationPercentage: 80
  # targetMemoryUtilizationPercentage: 80

# Additional volumes on the output Deployment definition.
extraVolumes: []
# - name: foo
#   secret:
#     secretName: mysecret
#     optional: false

# Additional volumeMounts on the output Deployment definition.
extraVolumeMounts: []
# - name: foo
#   mountPath: "/etc/foo"
#   readOnly: true

nodeSelector: {}

tolerations: []

affinity: {}
